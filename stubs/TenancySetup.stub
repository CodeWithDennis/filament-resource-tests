<?php

use Filament\Facades\Filament;
use App\Filament\Resources\{{ RESOURCE }}\Pages\List{{ MODEL_PLURAL_NAME }};
use App\Filament\Resources\{{ MODEL_SINGULAR_NAME}}Resource\Pages\Create{{ MODEL_SINGULAR_NAME}};
use App\Filament\Resources\{{ MODEL_SINGULAR_NAME}}Resource\Pages\Edit{{ MODEL_SINGULAR_NAME}};
use App\Filament\Resources\{{ MODEL_SINGULAR_NAME}}Resource\Pages\View{{ MODEL_SINGULAR_NAME}};
use App\Filament\Resources\{{ RESOURCE }};
use Filament\Tables\Actions\DeleteAction;
use Filament\Tables\Actions\DeleteBulkAction;
use Filament\Tables\Actions\RestoreAction;
use Filament\Tables\Actions\ReplicateAction;
use Filament\Tables\Actions\RestoreBulkAction;
use Filament\Tables\Actions\ForceDeleteAction;
use Filament\Tables\Actions\ForceDeleteBulkAction;
{{ MODEL_IMPORT }}

use function Pest\Laravel\actingAs;
use function Pest\Laravel\assertModelMissing;
use function Pest\Laravel\get;
use function Pest\Livewire\livewire;

uses()->group('filament-tests');

beforeEach(function () {
    $this->{{ TENANT_MODEL_SINGULAR_NAME_LOWER }} = {{ TENANT_MODEL }}::factory()->create();

    $this->otherTenant = {{ TENANT_MODEL }}::factory()->create();

    $this->user = User::factory()->create();

    $this->user->{{ TENANT_MODEL_PLURAL_NAME_LOWER }}()->attach($this->{{ TENANT_MODEL_SINGULAR_NAME_LOWER }});

    actingAs($this->user);

    Filament::setTenant($this->{{ TENANT_MODEL_SINGULAR_NAME_LOWER }});
});
