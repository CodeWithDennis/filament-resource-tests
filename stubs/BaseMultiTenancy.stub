<?php

use App\Filament\Resources\{{ RESOURCE }}\Pages\List{{ MODEL_PLURAL_NAME }};
use App\Filament\Resources\{{ MODEL_SINGULAR_NAME}}Resource\Pages\Create{{ MODEL_SINGULAR_NAME}};
use App\Filament\Resources\{{ MODEL_SINGULAR_NAME}}Resource\Pages\Edit{{ MODEL_SINGULAR_NAME}};
use App\Filament\Resources\{{ MODEL_SINGULAR_NAME}}Resource\Pages\View{{ MODEL_SINGULAR_NAME}};
use App\Filament\Resources\{{ RESOURCE }};
use Filament\Tables\Actions\DeleteAction;
use Filament\Tables\Actions\DeleteBulkAction;
use Filament\Tables\Actions\RestoreAction;
use Filament\Tables\Actions\ReplicateAction;
use Filament\Tables\Actions\RestoreBulkAction;
use Filament\Tables\Actions\ForceDeleteAction;
use Filament\Tables\Actions\ForceDeleteBulkAction;
use Filament\Facades\Filament;
{{ MODEL_IMPORT }}
use {{ TENANT_MODEL }};

use function Pest\Laravel\actingAs;
use function Pest\Laravel\assertModelMissing;
use function Pest\Laravel\get;
use function Pest\Livewire\livewire;

uses()->group('filament-tests');

beforeEach(function () {
    $this->{{ TENANT_MODEL_SINGULAR_NAME_LOWER }} = {{ TENANT_MODEL_SINGULAR_NAME }}::factory()->create();

    $this->{{ USER_MODEL_SINGULAR_NAME_LOWER }} = {{ USER_MODEL_SINGULAR_NAME }}::factory()->create();
    $this->{{ USER_MODEL_SINGULAR_NAME_LOWER }}->{{ TENANT_MODEL_PLURAL_NAME_LOWER }}()->attach($this->{{ TENANT_MODEL_SINGULAR_NAME_LOWER }});

    actingAs($this->{{ USER_MODEL_SINGULAR_NAME_LOWER }});
    Filament::setTenant($this->{{ TENANT_MODEL_SINGULAR_NAME_LOWER }});
});
